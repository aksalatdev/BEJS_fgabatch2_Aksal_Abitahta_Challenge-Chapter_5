openapi: 3.0.0
info:
  title: API Documentation
  version: 1.0.0
  description: API documentation endpoint
servers:
  - url: http://localhost:3000/api/v1
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: "Masukkan token JWT Anda di sini. Token ini digunakan untuk autentikasi setiap endpoint yang membutuhkan authorization."
paths:
  /auth/register:
    post:
      summary: Register a new user with auth
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                email:
                  type: string
                password:
                  type: string
              required:
                - name
                - email
                - password
      responses:
        201:
          description: User registered successfully
        500:
          description: Internal server error
          
  /auth/login:
    post:
      summary: Login a user with auth
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
              required:
                - email
                - password
      responses:
        200:
          description: User logged in successfully
        400:
          description: Invalid credentials
        500:
          description: Internal server error
          
  /auth/authenticate:
    get:
      summary: Check if user is authenticated
      tags:
        - Auth
      security:
        - bearerAuth: []
      responses:
        200:
          description: User is authenticated
        401:
          description: Token expired or invalid
          
  /users:
    post:
      summary: Create a new user
      tags:
        - Users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                email:
                  type: string
                password:
                  type: string
                identity_type:
                  type: string
                identity_number:
                  type: string
                address:
                  type: string
              required:
                - name
                - email
                - password
      responses:
        201:
          description: User created successfully
        500:
          description: Internal server error

    get:
      summary: Get all users
      tags:
        - Users
      responses:
        200:
          description: List of users

  /users/{userId}:
    get:
      summary: Get user by ID
      tags:
        - Users
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
      responses:
        200:
          description: User details
        404:
          description: User not found

  /transactions:
    post:
      summary: Create a new transaction
      tags:
        - Transactions
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                amount:
                  type: number
                source_account_id:
                  type: integer
                destination_account_id:
                  type: integer
              required:
                - amount
                - source_account_id
                - destination_account_id
      responses:
        201:
          description: Transaction created successfully
        500:
          description: Internal server error

    get:
      summary: Get all transactions
      tags:
        - Transactions
      responses:
        200:
          description: List of transactions

  /transactions/{transactionId}:
    get:
      summary: Get transaction by ID
      tags:
        - Transactions
      parameters:
        - name: transactionId
          in: path
          required: true
          schema:
            type: integer
      responses:
        200:
          description: Transaction details
        404:
          description: Transaction not found

  /accounts:
    post:
      summary: Create a new account
      tags:
        - Accounts
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: integer
                bank_name:
                  type: string
                bank_account_number:
                  type: string
                balance:
                  type: number
              required:
                - userId
                - bank_name
                - bank_account_number
                - balance
      responses:
        201:
          description: Account created successfully
        500:
          description: Internal server error

    get:
      summary: Get all accounts
      tags:
        - Accounts
      responses:
        200:
          description: List of accounts

  /accounts/{accountId}:
    get:
      summary: Get account by ID
      tags:
        - Accounts
      parameters:
        - name: accountId
          in: path
          required: true
          schema:
            type: integer
      responses:
        200:
          description: Account details
        404:
          description: Account not found
